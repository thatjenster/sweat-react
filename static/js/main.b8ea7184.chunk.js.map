{"version":3,"sources":["Assets/header.png","Components/Layout/SignIn.js","Store/actions/authAction.js","Components/Layout/SignOut.js","Components/Layout/Navbar.js","Components/Layout/Header.js","Components/Dashboard/Notice.js","Components/Programs/Summary.js","Components/Programs/Lists.js","Components/Dashboard/Dashboard.js","Components/Programs/Clock/TimeSet.js","Components/Programs/Clock/Timer.js","Components/Programs/Clock/Controls.js","Components/Programs/Clock/Clock.js","Components/Programs/Clock/Hooks/useInterval.js","Components/Programs/Details.js","Components/Authenication/LogIn.js","Components/Authenication/Register.js","Components/Programs/Create.js","Store/actions/programsAction.js","App.js","serviceWorker.js","Store/Reducers/authenicationReducer.js","Store/Reducers/createReducer.js","Store/Reducers/rootReducer.js","firebaseConfig.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","aria-hidden","onClick","profile","initials","SignOut","state","console","log","firebase","links","uid","isLoaded","Header","src","headerImg","alt","class","href","target","Notice","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","Summary","program","title","authorFirstName","authorLastName","createdAt","calendar","Lists","programs","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","TimeSet","value","val","setVal","toLowerCase","Timer","currentMode","currentTime","mode","format","Controls","activeStatus","handleReset","active","setActive","Clock","useState","breakVal","setBreakVal","sessionVal","setSessionVal","setMode","setTime","beep","useRef","callback","delay","savedCallback","useEffect","current","setInterval","clearInterval","useInterval","play","pause","ref","ownProps","match","params","data","workout","LogIn","handleChange","event","setState","handleSubmit","preventDefault","signIn","email","password","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","Register","register","firstName","lastName","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","Create","createProgram","history","push","authorId","add","Date","err","App","exact","path","component","Details","Login","Boolean","window","location","hostname","initState","authenicationReducer","action","message","createReducer","rootReducer","combineReducers","create","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","infoProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8ea7184.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.bc4f8e79.png\";","// stateless component no data being stored\n\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from './../../Store/actions/authAction'\n\nconst SignIn = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New <i className=\"fa fa-plus\" aria-hidden=\"true\"></i></NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to=\"/dashboard\" className=\"btn btn-floating light-blue lighten-3\">{props.profile.initials}</NavLink></li>\n        </ul>\n    ) \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn);","import { getFirebase, firestoreReducer } from \"react-redux-firebase\"\nimport { getFirestore } from \"redux-firestore\";\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESSFUL' })\n        }).catch((error) => {\n            dispatch({ type: 'LOGIN_ERROR', error })\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const register = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n    ).then((response) => {\n        return firestore.collection('users').doc(response.user.uid).set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n        })\n    }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch(error => {\n        dispatch({ type: 'SIGNUP_ERROR', error })\n    })\n    }   \n}\n","// stateless component no data being stored\n\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignOut = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/register\">Register</NavLink></li>\n            <li><NavLink to=\"/login\">Log In</NavLink></li>\n        </ul>\n    ) \n}\n\nexport default SignOut;","// stateless components no data being stored \n\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignIn from './SignIn'\nimport SignOut from './SignOut'\nimport { connect } from 'react-redux'\nimport { isLoaded } from 'react-redux-firebase'\n\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    \n    const links = auth.uid ? <SignIn profile={profile}/> : <SignOut />;\n    return(\n        <nav className=\"nav-wrapper blue accent-3\">\n            <div className=\"container\">\n                <Link to='/dashboard' className=\"logo\">Sweat</Link>\n                { isLoaded(auth) && links }\n            </div>\n\n        </nav>\n    ) \n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport headerImg from './../../Assets/header.png'\n\nconst Header = () => {\n    return(\n        <div>\n            <div className=\"header-image\">\n                <img src={headerImg} alt=\"header logo\"/>\n                <p>Strive for PROGRESS not PERFECTION</p>\n            </div>\n            <div class=\"social-box\">\n                <div class=\"social\">\n                    <a href=\"https://www.instagram.com/jennyt.dinh/\" target=\"_blank\"><i class=\"fa fa-instagram\" aria-hidden=\"true\"></i></a>\n                    <a href=\"https://twitter.com/thatjenster\" target=\"_blank\"><i class=\"fa fa-twitter\" aria-hidden=\"true\"></i></a>\n                    <a href=\"https://github.com/thatjenster\" target=\"_blank\"><i class=\"fa fa-github\" aria-hidden=\"true\"></i></a>\n                    <a href=\"https://www.linkedin.com/in/thatjenster-jennydinh/\" target=\"_blank\"><i class=\"fa fa-linkedin\" aria-hidden=\"true\"></i></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","// Stateless component \n\nimport React from 'react'\nimport moment from 'moment'\n\nconst Notice = (props) => {\n    const { notifications } = props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notice\">\n                        { notifications && notifications.map(item => {\n                            return( \n                                <li key={item.id}>\n                                    <span className=\"purple-text\">{item.user}</span>\n                                    <span>{item.content}</span>\n                                    <div>\n                                    {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        }) }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notice;","// Stateless component - only data being passed down\nimport React from 'react'\nimport moment from 'moment'\n\nconst Summary = ({program}) => {\n    return(\n        <div className=\"card z-depth-0 summary\">\n            <div className=\"card-content\">\n                <span className=\"card-title\">{program.title}</span>\n                    <p>Posted by {program.authorFirstName} {program.authorLastName}</p>\n                <p>{ moment(program.createdAt.toDate()).calendar() }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Summary;","// Stateless component no data passed\n\nimport React from 'react'\nimport Summary from './Summary'\nimport { Link } from 'react-router-dom'\n\nconst Lists = ({ programs} ) => {\n    return(\n        <div className=\"lists section\">\n            {programs && programs.map(program => {\n                return(\n                    <Link to={'/program/' + program.id} key={program.id}>\n                    <Summary program={program} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Lists;","// Class components - Will be using STATE/LIFECYCLE and potentially HOOKS\n\nimport React, { Component } from 'react'\nimport Notice from './Notice'\nimport Lists from '../Programs/Lists'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render(){\n        const { programs, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/header' />\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <Lists programs={programs}/>\n                    </div>\n\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notice notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        programs: state.firestore.ordered.programs,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'programs', orderBy: ['createdAt', 'desc']},\n        { collection: 'notifications', limit: 4, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard);","import React from 'react'\n\nconst TimeSet = ({ type, value }) => {\n  const [val, setVal] = value\n  const handleIncrement = () => {\n    if (val >= 60) {\n      return null\n    } else {\n      setVal(val + 1)\n    }\n  }\n  const handleDecrement = () => {\n    if (val === 1) {\n      return null\n    } else {\n      setVal(val - 1)\n    }\n  }\n  return (\n    <div className=\"control\">\n      <h2 id={`${type.toLowerCase()}-label`}>{type} Length</h2>\n      <button id={`${type.toLowerCase()}-increment`} onClick={handleIncrement}>\n        &uarr;\n      </button>\n      <h3 id={`${type.toLowerCase()}-length`}>{val}</h3>\n      <button id={`${type.toLowerCase()}-decrement`} onClick={handleDecrement}>\n        &darr;\n      </button>\n    </div>\n  )\n}\n\nexport default TimeSet\n","\nimport React from 'react'\nimport moment from 'moment'\n\nconst Timer = ({ currentMode, currentTime }) => {\n  const [mode] = currentMode\n  const [time] = currentTime\n  return (\n    <>\n      <h2 id=\"timer-label\">{mode === 'session' ? 'Session' : 'Break'}</h2>\n      <h3 id=\"time-left\">{moment(time).format('mm:ss')}</h3>\n    </>\n  )\n}\n\nexport default Timer","import React from 'react'\n\nconst Controls = ({ activeStatus, handleReset }) => {\n  const [active, setActive] = activeStatus\n  return (\n    <div className=\"controls-wrapper\">\n      <button id=\"start_stop\" onClick={() => setActive(!active)}>\n        {active ? <span><i className=\"fa fa-pause-circle\" aria-hidden=\"true\"></i></span> : <span><i className=\"fa fa-play-circle\" aria-hidden=\"true\"></i></span>}\n      </button>\n      <button id=\"reset\" onClick={handleReset}>\n      <i className=\"fa fa-repeat\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  )\n}\n\nexport default Controls","import React, { useState, useEffect, useRef } from 'react'\n\nimport { useInterval } from './Hooks/useInterval'\n\nimport TimeSet from './TimeSet'\nimport Timer from './Timer'\nimport Controls from './Controls'\n\nconst Clock = () => {\n  const [breakVal, setBreakVal] = useState(2)\n  const [sessionVal, setSessionVal] = useState(5)\n  const [mode, setMode] = useState('session')\n  const [time, setTime] = useState(sessionVal * 60 * 1000)\n  const [active, setActive] = useState(false)\n  const beep = useRef()\n\n  useInterval(() => setTime(time - 1000), active ? 1000 : null)\n\n  useEffect(() => {\n    setTime(sessionVal * 60 * 1000)\n  }, [sessionVal])\n\n  useEffect(() => {\n    if (time === 0 && mode === 'session') {\n      beep.current.play()\n      setMode('break')\n      setTime(breakVal * 60 * 1000)\n    } else if (time === 0 && mode === 'break') {\n      beep.current.play()\n      setMode('session')\n      setTime(sessionVal * 60 * 1000)\n    }\n  }, [time, breakVal, sessionVal, mode])\n\n  const handleReset = () => {\n    beep.current.pause()\n    beep.current.currentTime = 0\n    setActive(false)\n    setMode('session')\n    setBreakVal(2)\n    setSessionVal(5)\n    setTime(5 * 60 * 1000)\n  }\n\n  return (\n    <div className=\"container-clock\">\n      <main>\n        <div className=\"clock-wrapper\">\n          <Timer currentMode={[mode, setMode]} currentTime={[time, setTime]} />\n          <Controls\n            activeStatus={[active, setActive]}\n            handleReset={handleReset}\n          />\n        </div>\n        <div className=\"timeset-wrapper\">\n          <TimeSet type={'Break'} value={[breakVal, setBreakVal]} />\n          <TimeSet type={'Session'} value={[sessionVal, setSessionVal]} />\n        </div>\n      </main>\n      <audio id=\"beep\" ref={beep} />\n    </div>\n  )\n}\n\nexport default Clock;","import { useEffect, useRef } from 'react'\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport Clock from './Clock/Clock'\n\nconst Details = (props) => {\n    const { program, auth } = props;\n    if (!auth.uid) return <Redirect to='/header' />\n\n    if (program) {\n        return(\n        <div className=\"container section details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                <span className=\"card-title\">{program.title}</span>\n                    <p>{program.content}</p>\n                    <ul>\n                        <li>{program.workout}</li>\n                    </ul>\n                    <div className=\"card-action\">\n                        <div>{program.authorFirstName} {program.authorLastName}</div>\n                        <div>{moment(program.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div> \n            <Clock />\n        </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading Program :)</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const programs = state.firestore.data.programs;\n    const program = programs ? programs[id] : null;\n    return {\n        program: program,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(() => ['programs'])\n)(Details);","// Class component - storing in local state the user information\n\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from './../../Store/actions/authAction'\nimport { Redirect } from 'react-router-dom'\n\nclass LogIn extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to=\"/dashboard\" />\n        return(\n            <div className=\"container login-container\">\n                <form className=\"logIn-form\" onSubmit={this.handleSubmit}>\n                    <h3>Sign In</h3>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\"><i className=\"auth-icon fa fa-envelope-o\" aria-hidden=\"true\"></i>Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\"><i className=\"auth-icon fa fa-key\" aria-hidden=\"true\"></i>Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"auth-button\">Log In</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);","// Class component - storing in local state the user information\n\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { register } from './../../Store/actions/authAction'\n\nclass Register extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            firstName: \"\",\n            lastName: \"\"\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.register(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to=\"/dashboard\" />\n        return(\n            <div className=\"container register-container\">\n                <form className=\"logIn-form\" onSubmit={this.handleSubmit}>\n                    <h3>Create an <span className=\"highlight\">Account</span></h3>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\"><i className=\"auth-icon fa fa-envelope-o\" aria-hidden=\"true\"></i>Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\"><i className=\"auth-icon fa fa-key\" aria-hidden=\"true\"></i>Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\"><i className=\"auth-icon fa fa-user\" aria-hidden=\"true\"></i>First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\"><i className=\"auth-icon fa fa-user\" aria-hidden=\"true\"></i>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"auth-button\">Register</button>\n                        <div className=\"rext-text center\">\n                            { authError ? <p>{ authError }</p> : null}\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        register: (newUser) => dispatch(register(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","// Class component - storing in local state the user information\n\nimport React, { Component } from 'react'\nimport { createProgram } from './../../Store/actions/programsAction'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Create extends Component {\n    state = {\n        title: '',\n        content: '',\n        workout: ''\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.createProgram(this.state);\n        this.props.history.push('/dashboard');\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/header' />\n        return(\n            <div className=\"container\">\n                <form className=\"logIn-form\" onSubmit={this.handleSubmit}>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">The Workout</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"workout\">Type your moves</label>\n                        <input type=\"text\" id=\"workout\" onChange={this.handleChange} />\n                        {/* <button className=\"create-btn btn\"><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button> */}\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"create-btn btn\">CREATE!</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createProgram: (program) => dispatch(createProgram(program))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);","export const createProgram = (program) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        \n        // making async call to get data from database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;  \n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('programs').add({\n            ...program,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROGRAM', program });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROGRAM_ERROR', err });\n        });\n    }\n};\n\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './Components/Layout/Navbar'\nimport styles from './Styles/styles.css'\nimport Header from './Components/Layout/Header'\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Details from './Components/Programs/Details'\nimport Login from './Components/Authenication/LogIn'\nimport Register from './Components/Authenication/Register'\nimport Create from './Components/Programs/Create'\nimport 'font-awesome/css/font-awesome.min.css'\n\nclass App extends Component {\n  render() {\n  \n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Header} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/program/:id\" component={Details} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/create\" component={Create} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authenicationReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n            ...state,\n            authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESSFUL':\n            console.log('login sucess');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout sucessfull');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.error.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authenicationReducer;","const initState = {\n    programs: [\n        {id: '1', title: 'Booty Program', content: 'BLAH BLAH BLAH'},\n        {id: '2', title: 'Get Fit Program', content: 'BLAH BLAH BLAH'},\n        {id: '3', title: 'Tight Core Program', content: 'BLAH BLAH BLAH'}\n    ]\n}\n\nconst createReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROGRAM':\n            console.log('created program', action.program)\n            return state;\n        case 'CREATE_PROGRAM_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default: \n            return state;\n    }\n};\n\nexport default createReducer;","import authenicationReducer from './authenicationReducer'\nimport createReducer from './createReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authenicationReducer,\n    create: createReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyDyTnIGPVUHlpxBE4srD485NzwRhYwLcS4\",\n    authDomain: \"sweat-react.firebaseapp.com\",\n    databaseURL: \"https://sweat-react.firebaseio.com\",\n    projectId: \"sweat-react\",\n    storageBucket: \"sweat-react.appspot.com\",\n    messagingSenderId: \"1068209361311\",\n    appId: \"1:1068209361311:web:5590d6d6a3fe25207dadaa\",\n    measurementId: \"G-SWTBRFHK6S\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './Store/Reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport firebaseConfig from './firebaseConfig'\nimport firebase from 'firebase/app'\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebase, firebaseConfig)\n    )\n);\n\nconst information = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n  }\n  \nconst infoProps = {\n    firebase,\n    config: information,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    presence: 'presence',\n    sessions: 'sessions'\n}\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n    return children\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...infoProps}>\n            <AuthIsLoaded>\n                <App />\n            </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}